<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize

// width and height
width = 16;
height = 16;

// max height/depth
maxy = 12;
// zone height
zoneh = maxy * 2;
// difficulty
diff = 4; // easy

// create builders
center = room_height / 2 / height;
b1 = center - maxy;
b2 = center + maxy;

// data grid
data = ds_grid_create(room_width / width, room_height / height);

// think
randomize();
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Think

// go until end
if (x &lt; room_width)
{
    // add top tile &amp; wall
    instance_create(x, b1 * height, o_wall);
    tile_add(b_world, 0, 0, width, height, x, b1 * height, 10000);
    // add bottom tile &amp; wall    
    instance_create(x, b2 * height, o_wall);
    tile_add(b_world, 0, 0, width, height, x, b2 * height, 10000);
    // fill grid location with -1
    ds_grid_set_region(data, x / 16, b1, x / 16, b2, -1);
    
    // pick up or down
    c1 = choose(true, false);
    c2 = choose(false, true);
    
    // not closer than 2 blocks from second builder
    if (c1 &amp;&amp; b2 - b1 &gt; 4)
        b1++;
    // not at top
    else if (b1 &gt; center - maxy)
        b1--;
        
    // not closer than 2 blocks from first builder
    if (c2 &amp;&amp; b2 - b1 &gt; 4)
        b2--;
    // not at bottom
    else if (b2 &lt; center + maxy)
        b2++;
        
    // move generator over one
    x += width;

    // think
    alarm[0] = random(1) + 1;
}
// stop at the end
else
{
    // add a tile for all zeros
    for (i = 0; i &lt; ds_grid_width(data); i++)
    {
        for (j = 0; j &lt; ds_grid_height(data); j++)
        {
            // only change zeros
            value = ds_grid_get(data, i, j);
            if (value == 0)
            {
                // get a random tile
                tile = 1;//irandom(4);
                tile_add(b_world, tile * width, 0, width, height, i * width, j * height, 10000);
            }
        }
    }
    
    // start the game
    instance_create(16, center * height, o_controller);
    view_object[0] = o_snake;
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// shrink in increments of difficulty
/*if (x mod diff == 0)
    maxy -= 2;*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Building (debug only)
if (debug_mode)
{
    // draw builders
    draw_rectangle_color(x, b1 * height, x + width, b1 * height + height, c_blue, c_blue, c_blue, c_blue, true);
    draw_rectangle_color(x, b2 * height, x + width, b2 * height + height, c_red, c_red, c_red, c_red, true);
    
    // draw reference point
    draw_line_color(x, 0, x, room_height, c_red, c_red);
    
    // draw grid values in debug
    for (i = 0; i &lt; ds_grid_width(data); i++)
    {
        for (j = 0; j &lt; ds_grid_height(data); j++)
        {
            // get grid real world x/y
            xx = i * width;
            yy = j * height;
            value = ds_grid_get(data, i, j);
        
            // drawText(x, y, text, color, alpha, font, align)
            if (value != 0)
                drawTextExt(xx + width / 2, yy + 4, value, c_black, 1, f_hud, fa_center);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
