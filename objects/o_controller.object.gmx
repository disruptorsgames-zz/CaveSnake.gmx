<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
time = 3;
win = false;
startx = x;
starty = y;
nextOneUp = score + 100 - (score mod 100);

// set lives
if (lives == -1)
    lives = 3;

playMusic(sfx_music);
        
// game spawners
instance_create(16, 16, o_command);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check For Rotation
if (isDevice())
    setView();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Count Down
if (time &gt; 0)
    time -= 0.0075;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Spawn And Click To Continue
if (time &lt;= 1)
{
    // spawn
    if (time &gt; 0.5 &amp;&amp; !win)
    {
        time = 0;
        instance_create(startx, starty, o_snake);
    }
    else if(mouse_check_button_pressed(mb_left) || keyboard_check(vk_enter))
    {
        // special win condition
        if (win)
        {
            // determine where to go based on current room
            switch(room)
            {
                // go to next worlds
                case r_world1:
                    room_goto(r_world2);
                    break;
                case r_world2:
                    room_goto(r_world3);
                    break;
                case r_world3:
                    room_goto(r_world4);
                    break;
                case r_world4:
                    room_goto(r_world5);
                    break;
                default:
                    game_restart();
                    break;
            }
        }
        // alive but no snake
        else if (lives &gt; 0 &amp;&amp; !instance_exists(o_snake))
            instance_create(startx, starty, o_snake);
        // game over
        else if (lives == 0)
            game_restart();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stats

// lives
for(i = 0; i &lt; lives; i++)
{
    draw_sprite(s_heart, -1, 8 + i * 18, view_hview[0] - 24);
}

// score
txt = "Score: " + string(score);
drawText((view_wview[0] - string_width(txt)) / 2, 2, txt, c_green);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Titles

// cound down
if (time &gt; 0 &amp;&amp; !win)
    drawTitle(round(time), c_gray, false);
// congrats!
else if (win)
    drawTitle("Nice Job!", c_green, true);
// first death
else if (lives &gt;= 2 &amp;&amp; !instance_exists(o_snake))
    drawTitle("Ouch!", c_maroon, true);
// last guy!
else if (lives == 1 &amp;&amp; !instance_exists(o_snake))
    drawTitle("Last life!", c_maroon, true);
// game over man!
else if (lives == 0)
    drawTitle("Game Over!", c_maroon, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Physics Debug
if(debug_mode)
{
    flag = phy_debug_render_coms | phy_debug_render_shapes;
    physics_world_draw_debug(flag);
    /*flag = phy_debug_render_aabb | phy_debug_render_collision_pairs | phy_debug_render_obb;
    physics_world_draw_debug(flag);*/
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Are You Sure You Want To Quit?
if (room != r_menu)
{
    // confirmation
    if (show_question("Are you sure you want to end this game and go back to the main menu?"))
        game_restart();
        
    // always reset score
    score = 0;
}
else if (room == r_menu)
{
    // confirmation
    if (show_question("Are you sure you want to quit the game?"))
        game_end();   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
